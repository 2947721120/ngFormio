!function(){"use strict";var e=angular.module("formio",[]);e.provider("Formio",function(){var e="https://api.form.io",o={};return{setBaseUrl:function(o){e=o},$get:["$http","$q",function(t,n){var i=function(o){if(!(this instanceof i))return new i(o);if(o){var t=o.replace(/\/?app\//,"").split("/");angular.forEach(["appId","formType","formId","pathType","pathId"],function(e,o){e&&t.length>o&&(this[e]=t[o])}.bind(this)),this.appPath=this.appId?"/app/"+this.appId:"",this.appUrl=this.appPath?e+this.appPath:"",this.resourcesUrl=this.appUrl+"/resource",this.formPath=this.formId?this.appPath+"/"+this.formType+"/"+this.formId:"",this.formsUrl=this.formType?this.appUrl+"/"+this.formType:"",this.formUrl=this.formId?e+this.formPath:this.formsUrl,this.subId="submission"===this.pathType?this.pathId:"",this.subPath=this.subId?this.formPath+"/submission/"+this.subId:"",this.subsUrl=this.formPath?e+this.formPath+"/submission":"",this.subUrl=this.subPath?e+this.subPath:this.subsUrl,this.actionId="action"===this.pathType?this.pathId:"",this.actionPath=this.actionId?this.formPath+"/action/"+this.actionId:"",this.actionsUrl=this.formPath?e+this.formPath+"/action":"",this.actionUrl=this.actionPath?e+this.actionPath:this.actionsUrl}},r=function(e,i){var r=n.defer();if(!e)return r.promise;var s=e;return s+=i?angular.toJson(i):"",s=btoa(s),o.hasOwnProperty(s)?o[s]:(o[s]=r.promise,t.get(e,i).success(r.resolve).error(r.reject),r.promise)},s=function(e){var o=e+"Id",t=e+"Url";return function(e){return this[o]?r(this[t],e):n.defer().promise}},m=function(e){var i=e+"Id",r=e+"Url";return function(e){var s=n.defer();if(!this[r])return s.promise;var m=this[i]?"put":"post";return t[m](this[r],e).success(function(e){o={},e.method=m,s.resolve(e)}).error(s.reject),s.promise}},a=function(e){var i=e+"Id",r=e+"Url";return function(){var e=n.defer();return this[i]?(o={},t["delete"](this[r]).success(e.resolve).error(e.reject),e.promise):e.promise}},c=function(e){var o=e+"sUrl";return function(e){return r(this[o],e)}};return i.prototype.loadResources=c("resource"),i.prototype.loadForm=s("form"),i.prototype.saveForm=m("form"),i.prototype.deleteForm=a("form"),i.prototype.loadForms=c("form"),i.prototype.loadSubmission=s("sub"),i.prototype.saveSubmission=m("sub"),i.prototype.deleteSubmission=a("sub"),i.prototype.loadSubmissions=c("sub"),i.prototype.loadAction=s("action"),i.prototype.saveAction=m("action"),i.prototype.deleteAction=a("action"),i.prototype.loadActions=c("action"),i.prototype.availableActions=function(){return r(this.formUrl+"/actions")},i.clearCache=function(){o={}},i.baseUrl=e,i.submissionData=function(e,o,t){if(!e)return"";if(o["protected"])return"--- PROTECTED ---";if(-1!==o.key.indexOf(".")){var n=e,i=o.key.split("."),r="",s=!1;return angular.forEach(i,function(e){return"_id"!==e&&n.hasOwnProperty("_id")&&(n=n.data),n.hasOwnProperty(e)?(n=n[e],s=!0,void(t&&(r+=e+".",t(r,n)))):void(s=!1)}),s?(e[o.key]=n,n):""}return e[o.key]},i}]}}),e.factory("FormioScope",["Formio","formioComponents",function(e,o){return{onError:function(e){return function(o){if("ValidationError"===o.name){angular.element("#form-group-"+o.details[0].path).addClass("has-error");var t="ValidationError: "+o.details[0].message;e.formioAlerts.push({type:"danger",message:t})}else e.formioAlerts.push({type:"danger",message:o});e.$emit("formError",o)}},register:function(t,n){var i=null;t._form=t.form||{},t._submission=t.submission||{data:{}},t._submissions=t.submissions||[];var r=function(o){return o?t.action?"":("/"===o.substr(0,1)&&(o=e.baseUrl+o),o):""};t.action=r(t.formAction);var s={};return t.$on("addFormComponent",function(e,n){if(!s.hasOwnProperty(n.settings.key)){s[n.settings.key]=!0;var i=o.components[n.type];t._form.components.push(angular.extend(i.settings,n.settings))}}),t.$watch("form.action",function(e){if(e){var o=r(e);o&&(t.action=o)}}),t.submissionData=e.submissionData,t.src?(i=new e(t.src),n.form&&i.loadForm().then(function(e){t._form=e,t.$emit("formLoad",e)},this.onError(t)),n.submission&&i.loadSubmission().then(function(e){t._submission=e,t.$emit("submissionLoad",e)},this.onError(t)),n.submissions&&i.loadSubmissions().then(function(e){t._submissions=e,t.$emit("submissionsLoad",e)},this.onError(t))):(t._form&&t.$emit("formLoad",t._form),t._submission&&t.$emit("submissionLoad",t._submission),t._submissions&&t.$emit("submissionsLoad",t._submissions)),i}}}]),e.factory("FormioUtils",function(){return{fieldWrap:function(e){e+="<formio-errors></formio-errors>";var o=e.replace("data[component.key]","data[component.key][$index]"),t='<label ng-if="component.label" for="{{ component.key }}" class="control-label">{{ component.label }}</label>',n='<span ng-if="component.validate.required" class="glyphicon glyphicon-asterisk form-control-feedback field-required" aria-hidden="true"></span>',i='<div ng-if="!component.multiple">'+t+n+'<div class="input-group" ng-if="component.prefix || component.suffix"><div class="input-group-addon" ng-if="!!component.prefix">{{ component.prefix }}</div>'+e+'<div class="input-group-addon" ng-if="!!component.suffix">{{ component.suffix }}</div></div><div ng-if="!component.prefix && !component.suffix">'+e+'</div></div><div ng-if="component.multiple"><table class="table table-bordered">'+t+'<tr ng-repeat="value in data[component.key] track by $index"><td>'+n+'<div class="input-group" ng-if="component.prefix || component.suffix"><div class="input-group-addon" ng-if="!!component.prefix">{{ component.prefix }}</div>'+o+'<div class="input-group-addon" ng-if="!!component.suffix">{{ component.suffix }}</div></div><div ng-if="!component.prefix && !component.suffix">'+o+'</div></td><td><a ng-click="removeFieldValue($index)" class="btn btn-danger"><span class="glyphicon glyphicon-remove-circle"></span></a></td></tr><tr><td colspan="2"><a ng-click="addFieldValue()" class="btn btn-primary"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add another</a></td></tr></table></div>';return i}}}),e.directive("formio",function(){return{restrict:"E",replace:!0,scope:{src:"=",formAction:"=",form:"=",submission:"="},controller:["$scope","$http","FormioScope","Formio",function(e,o,t,n){e.formioAlerts=[],e.formio=t.register(e,{form:!0,submission:!0}),e.onSubmit=function(i){if(i){var r={data:{}};e._submission._id&&(r._id=e._submission._id),angular.forEach(e._form.components,function(o){e._submission.data.hasOwnProperty(o.key)&&(r.data[o.key]=e._submission.data[o.key])}),angular.forEach(e._submission.data,function(e,o){r.data.hasOwnProperty(o)&&!e.hasOwnProperty("_id")&&(r.data[o]=e)});var s=function(o,t){e.formioAlerts.push({type:"success",message:"Submission was "+("put"===o?"updated":"created")+"."}),e.$emit("formSubmission",t)};if(e.action){var m=r._id?"put":"post";o[m](e.action,r).success(function(e){n.clearCache(),s(m,e)}).error(t.onError(e))}else e.formio?e.formio.saveSubmission(r).then(function(e){s(e.method,e)},t.onError(e)):e.$emit("formSubmission",r)}}}],templateUrl:"formio.html"}}),e.directive("formioDelete",function(){return{restrict:"E",replace:!0,scope:{form:"=",submission:"=",src:"=",formAction:"=",resourceName:"="},templateUrl:"formio-delete.html",controller:["$scope","FormioScope","Formio","$http",function(e,o,t,n){e.formioAlerts=[];var i="resource",r=o.register(e,{form:!0,submission:!0});if(r){i=r.subId?"submission":"form";var s="delete"+i.charAt(0).toUpperCase()+i.slice(1)}e.resourceName||(e.resourceName=i),e.onDelete=function(){var i=function(o){e.formioAlerts.push({type:"success",message:"Submission was deleted."}),t.clearCache(),e.$emit("delete",o)};e.action?n["delete"](e.action).success(i).error(o.onError(e)):r&&"function"==typeof r[s]&&r[s]().then(i,o.onError(e))},e.onCancel=function(){e.$emit("cancel")}}]}}),e.filter("flattenComponents",function(){return function e(o,t){return t=t||{},angular.forEach(o,function(o){o.columns&&o.columns.length>0?angular.forEach(o.columns,function(o){e(o,t)}):o.components&&o.components.length>0?e(o.components,t):o.input&&(t[o.key]=o)}),t}}),e.directive("formioErrors",function(){return{scope:!1,restrict:"E",templateUrl:"formio/errors.html"}}),e.directive("formioSubmissions",function(){return{replace:!0,restrict:"E",scope:{src:"=",form:"=",submissions:"="},templateUrl:"formio/submissions.html",controller:["$scope","FormioScope",function(e,o){o.register(e,{form:!0,submissions:!0})}]}}),e.directive("formioComponent",["Formio","formioComponents",function(e,o){return{replace:!0,restrict:"E",scope:{component:"=",data:"=",formio:"="},templateUrl:"formio/component.html",controller:["$scope","$http",function(t,n){t.data||(t.data={}),t.component&&t.component.key&&-1!==t.component.key.indexOf(".")&&t.$watch("data",function(o){o&&!angular.equals({},o)&&e.submissionData(t.data,t.component,function(e,o){o.hasOwnProperty("_id")&&t.$emit("addFormComponent",{type:"hidden",settings:{key:e+"_id"}})})});var i=o.components[t.component.type];if(angular.forEach(i.settings,function(e,o){t.component.hasOwnProperty(o)||(t.component[o]=e)}),t.addFieldValue=function(){t.data[t.component.key].push("")},t.removeFieldValue=function(e){t.data[t.component.key].splice(e,1)},t.template="function"==typeof i.template?i.template(t):i.template,-1!==t.component.key.indexOf("[")){var r=t.component.key.match(/([^\[]+)\[([^]+)\]/);3===r.length&&t.data.hasOwnProperty(r[1])&&(t.data=t.data[r[1]],t.component.key=r[2])}t.data&&!t.data.hasOwnProperty(t.component.key)&&t.component.hasOwnProperty("defaultValue")&&(t.data[t.component.key]=t.component.multiple?[t.component.defaultValue]:t.component.defaultValue),i.controller&&i.controller(t.component,t,n,e)}]}}]),e.directive("formioElement",["$compile","$templateCache",function(e,o){return{scope:!1,link:function(t,n){n.replaceWith(e(o.get(t.template))(t))}}}]),e.directive("formioInputMask",function(){return{restrict:"A",link:function(e,o,t){t.formioInputMask&&o.mask(t.formioInputMask)}}}),e.run(["$templateCache",function(e){e.put("formio.html",'<form role="form" name="formioForm" ng-submit="onSubmit(formioForm.$valid)" novalidate><div ng-repeat="alert in formioAlerts" class="alert alert-{{ alert.type }}" role="alert">{{ alert.message }}</div><formio-component ng-repeat="component in _form.components track by $index" component="component" data="_submission.data" formio="formio"></formio-component><button type="submit" class="btn btn-primary" ng-disabled="formioForm.$invalid">Submit</button></form>'),e.put("formio-delete.html",'<form role="form"><div ng-repeat="alert in formioAlerts" class="alert alert-{{ alert.type }}" role="alert">{{ alert.message }}</div><h3>Are you sure you wish to delete the {{ resourceName }}?</h3><div class="btn-toolbar"><button ng-click="onDelete()" class="btn btn-danger">Yes</button><button ng-click="onCancel()" class="btn btn-default">No</button></div></form>'),e.put("formio/submissions.html",'<table class="table"><thead><tr><th ng-repeat="component in _form.components | flattenComponents">{{ component.label }}</th><th>Submitted</th><th>Updated</th><th>Operations</th></tr></thead><tbody><tr ng-repeat="submission in _submissions"><td ng-repeat="component in _form.components | flattenComponents">{{ submissionData(submission.data, component) }}</td><td>{{ submission.created | amDateFormat:\'l, h:mm:ss a\' }}</td><td>{{ submission.modified | amDateFormat:\'l, h:mm:ss a\' }}</td><td><div class="button-group"><a ng-click="$emit(\'submissionView\', submission)" class="btn btn-primary"><span class="glyphicon glyphicon-eye-open"></span></a>&nbsp;<a ng-click="$emit(\'submissionEdit\', submission)" class="btn btn-default"><span class="glyphicon glyphicon-edit"></span></a>&nbsp;<a ng-click="$emit(\'submissionDelete\', submission)" class="btn btn-danger"><span class="glyphicon glyphicon-remove-circle"></span></a></div></td></tr></tbody></table>'),e.put("formio/component.html",'<ng-form name="formioFieldForm"><div class="form-group has-feedback" id="form-group-{{ component.key }}" ng-class="{\'has-error\': formioFieldForm[component.key].$invalid && !formioFieldForm[component.key].$pristine }"><formio-element></formio-element></div></ng-form>'),e.put("formio/errors.html",'<div ng-show="formioFieldForm[component.key].$error && !formioFieldForm[component.key].$pristine"><p class="help-block" ng-show="formioFieldForm[component.key].$error.email">{{ component.label }} must be a valid email.</p><p class="help-block" ng-show="formioFieldForm[component.key].$error.required">{{ component.label }} is required.</p><p class="help-block" ng-show="formioFieldForm[component.key].$error.number">{{ component.label }} must be a number.</p><p class="help-block" ng-show="formioFieldForm[component.key].$error.maxlength">{{ component.label }} must be shorter than {{ component.validate.maxLength + 1 }} characters.</p><p class="help-block" ng-show="formioFieldForm[component.key].$error.minlength">{{ component.label }} must be longer than {{ component.validate.minLength - 1 }} characters.</p><p class="help-block" ng-show="formioFieldForm[component.key].$error.min">{{ component.label }} must be higher than {{ component.validate.min - 1 }}.</p><p class="help-block" ng-show="formioFieldForm[component.key].$error.max">{{ component.label }} must be lower than {{ component.validate.max + 1 }}.</p></div>')}]),e.provider("formioComponents",function(){var e={},o={__component:{title:"Form Components"},layout:{title:"Layout Components"}};return{addGroup:function(e,t){o[e]=t},register:function(o,t,n){e[o]?angular.extend(e[o],t):e[o]=t,e[o].group||(e[o].group=n||"__component"),e[o].settings.type=o},$get:function(){return{components:e,groups:o}}}}),e.config(["formioComponentsProvider",function(e){e.register("textfield",{title:"Text Field",template:"formio/components/textfield.html",settings:{input:!0,inputType:"text",inputMask:"",label:"",key:"",placeholder:"",prefix:"",suffix:"",multiple:!1,defaultValue:"","protected":!1,validate:{required:!1,minLength:"",maxLength:"",pattern:"",custom:""}}})}]),e.run(["$templateCache","FormioUtils",function(e,o){e.put("formio/components/textfield.html",o.fieldWrap('<input type="{{ component.inputType }}" class="form-control" id="{{ component.key }}" name="{{ component.key }}" ng-model="data[component.key]" ng-required="component.validate.required" ng-minlength="component.validate.minLength" ng-maxlength="component.validate.maxLength" placeholder="{{ component.placeholder }}" formio-input-mask="{{ component.inputMask }}">'))}]),e.config(["formioComponentsProvider",function(e){e.register("address",{title:"Address",template:function(e){return e.component.multiple?"formio/components/address-multiple.html":"formio/components/address.html"},controller:function(e,o,t){o.address={},o.addresses=[],o.refreshAddress=function(e){var n={address:e,sensor:!1};return t.get("http://maps.googleapis.com/maps/api/geocode/json",{params:n,headers:{Authorization:void 0}}).then(function(e){o.addresses=e.data.results})}},settings:{input:!0,label:"",key:"",placeholder:"",multiple:!1}})}]),e.run(["$templateCache",function(e){e.put("formio/components/address.html",'<label ng-if="component.label" for="{{ component.key }}">{{ component.label }}</label><ui-select ng-model="data[component.key]" id="{{ component.key }}" theme="bootstrap"><ui-select-match placeholder="{{ component.placeholder }}">{{$item.formatted_address || $select.selected.formatted_address}}</ui-select-match><ui-select-choices repeat="address in addresses track by $index" refresh="refreshAddress($select.search)" refresh-delay="1000"><div ng-bind-html="address.formatted_address | highlight: $select.search"></div></ui-select-choices></ui-select>'),e.put("formio/components/address-multiple.html",e.get("formio/components/address.html").replace("<ui-select","<ui-select multiple"))}]),e.config(["formioComponentsProvider",function(e){e.register("container",{title:"Container",template:"formio/components/container.html",group:"layout",settings:{input:!1,columns:[[],[]]}})}]),e.run(["$templateCache",function(e){e.put("formio/components/container.html",'<div class="row"><div class="col-xs-6" ng-repeat="components in component.columns"><formio-component ng-repeat="component in components" component="component" data="data" formio="formio"></formio-component></div></div>')}]),e.directive("dateTimePicker",function(){return{restrict:"AE",scope:!1,link:function(e,o){o.datetimepicker()}}}),e.config(["formioComponentsProvider",function(e){e.register("datetime",{title:"Date / Time",template:"formio/components/datetime.html",settings:{input:!0,label:"",key:"",placeholder:"",prefix:"",suffix:"",multiple:!1,validate:{required:!1,custom:""}}})}]),e.run(["$templateCache",function(e){e.put("formio/components/datetime.html","")}]),e.config(["formioComponentsProvider",function(e){e.register("email",{title:"Email",template:"formio/components/textfield.html",settings:{input:!0,inputType:"email",label:"",key:"",placeholder:"",prefix:"",suffix:"",defaultValue:""}})}]),e.config(["formioComponentsProvider",function(e){e.register("fieldset",{title:"Field Set",template:"formio/components/fieldset.html",settings:{input:!1,legend:"",key:"",components:[]}})}]),e.run(["$templateCache",function(e){e.put("formio/components/fieldset.html",'<fieldset><legend ng-if="component.legend">{{ component.legend }}</legend><formio-component ng-repeat="component in component.components" component="component" data="data" formio="formio"></formio-component></fieldset>')}]),e.config(["formioComponentsProvider",function(e){e.register("hidden",{title:"Hidden",template:"formio/components/hidden.html",settings:{input:!0,key:""}})}]),e.run(["$templateCache",function(e){e.put("formio/components/hidden.html",'<input type="hidden" id="{{ component.key }}" name="{{ component.key }} ng-model="data[component.key]">')}]),e.config(["formioComponentsProvider",function(e){e.register("number",{title:"Number",template:"formio/components/number.html",settings:{input:!0,inputType:"number",label:"",key:"",placeholder:"",prefix:"",suffix:"",defaultValue:"",validate:{required:!1,min:"",max:"",greater:"",less:"",step:"any",integer:"",multiple:"",custom:""}}})}]),e.run(["$templateCache","FormioUtils",function(e,o){e.put("formio/components/number.html",o.fieldWrap('<input type="{{ component.inputType }}" class="form-control" id="{{ component.key }}" name="{{ component.key }}" ng-model="data[component.key]" ng-required="component.validate.required" min="{{ component.validate.min }}" max="{{ component.validate.max }}" step="{{ component.validate.step }}" placeholder="{{ component.placeholder }}" formio-input-mask="{{ component.inputMask }}">'))}]),e.config(["formioComponentsProvider",function(e){e.register("panel",{title:"Panel",template:"formio/components/panel.html",group:"layout",settings:{input:!1,title:"",theme:"default",components:[]}})}]),e.run(["$templateCache",function(e){e.put("formio/components/panel.html",'<div class="panel panel-{{ component.theme }}"><div ng-if="component.title" class="panel-heading"><h3 class="panel-title">{{ component.title }}</h3></div><div class="panel-body"><formio-component ng-repeat="component in component.components" component="component" data="data" formio="formio"></formio-component></div></div>')}]),e.config(["formioComponentsProvider",function(e){e.register("password",{title:"Password",template:"formio/components/textfield.html",settings:{input:!0,inputType:"password",label:"",key:"",placeholder:"",prefix:"",suffix:"","protected":!0}})}]),e.config(["formioComponentsProvider",function(e){e.register("phoneNumber",{title:"Phone Number",template:"formio/components/phoneNumber.html",settings:{input:!0,inputMask:"(999) 999-9999",label:"",key:"",placeholder:"",prefix:"",suffix:""}})}]),e.run(["$templateCache",function(e){e.put("formio/components/phoneNumber.html",'<label ng-if="component.label" for="{{ component.key }}">{{ component.label }}</label><div class="input-group" ng-if="component.prefix || component.suffix"><div class="input-group-addon" ng-if="!!component.prefix">{{ component.prefix }}</div><input type="text" class="form-control" ng-model="data[component.key]" id="{{ component.key }}" placeholder="{{ component.placeholder }}" formio-input-mask="{{ component.inputMask }}"><div class="input-group-addon" ng-if="!!component.suffix">{{ component.suffix }}</div></div><input ng-if="!component.prefix && !component.suffix" type="text" class="form-control" ng-model="data[component.key]" id="{{ component.key }}" placeholder="{{ component.placeholder }}" formio-input-mask="{{ component.inputMask }}">')}]),e.config(["formioComponentsProvider",function(e){e.register("resource",{title:"Resource",template:function(e){return e.component.multiple?"formio/components/resource-multiple.html":"formio/components/resource.html"},controller:function(e,o,t,n){if(o.selectItems=[],e.resource){var i=new n(o.formio.appPath+"/resource/"+e.resource);if(e.searchExpression&&e.searchFields){var r=new RegExp(e.searchExpression);o.refreshSubmissions=function(t){if(t){var n=t.match(r),s={},m=!1;n&&n.length>1&&angular.forEach(e.searchFields,function(e,o){n.length>o+1&&n[o+1]&&(s[e]=n[o+1],m=!0)}),m&&i.loadSubmissions({params:s}).then(function(e){o.selectItems=e})}}}else o.refreshSubmissions=function(){},i.loadSubmissions().then(function(e){o.selectItems=e})}},settings:{input:!0,label:"",key:"",placeholder:"",resource:"",template:"<span>{{ item.data }}</span>",searchExpression:"",searchFields:"",multiple:!1,refresh:!1,refreshDelay:0}})}]),e.run(["$templateCache",function(e){e.put("formio/components/resource.html",'<label ng-if="component.label" for="{{ component.key }}">{{ component.label }}</label><ui-select ng-model="data[component.key]" id="{{ component.key }}" theme="bootstrap"><ui-select-match placeholder="{{ component.placeholder }}"><formio-select-item template="component.template" item="$item || $select.selected" select="$select"></formio-select-item></ui-select-match><ui-select-choices repeat="item in selectItems | filter: $select.search" refresh="refreshSubmissions($select.search)" refresh-delay="1000"><formio-select-item template="component.template" item="item" select="$select"></formio-select-item></ui-select-choices></ui-select>'),e.put("formio/components/resource-multiple.html",e.get("formio/components/resource.html").replace("<ui-select","<ui-select multiple"))}]),e.directive("formioSelectItem",["$compile",function(e){return{restrict:"E",scope:{template:"=",item:"=",select:"="},link:function(o,t){o.template&&t.html(e(angular.element(o.template))(o))}}}]),e.config(["formioComponentsProvider",function(e){e.register("select",{title:"Select",template:function(e){return e.component.multiple?"formio/components/select-multiple.html":"formio/components/select.html"},controller:function(e,o,t,n){o.nowrap=!0,o.selectItems=[];var i=o.component.valueProperty;if(o.getSelectItem=function(e){return i?e[i]:e},"/"===e.dataSrc.substr(0,1)&&(e.dataSrc=n.baseUrl+e.dataSrc),"http"===e.dataSrc.substr(0,4))t.get(e.dataSrc).success(function(e){o.selectItems=e});else if(e.dataSrc)try{o.selectItems=angular.fromJson(e.dataSrc)}catch(r){o.selectItems=[]}},settings:{input:!0,label:"",key:"",placeholder:"",dataSrc:"",valueProperty:"",template:"<span>{{ item }}</span>",multiple:!1,refresh:!1,refreshDelay:0}})}]),e.run(["$templateCache",function(e){e.put("formio/components/select.html",'<label ng-if="component.label" for="{{ component.key }}">{{ component.label }}</label><ui-select ng-model="data[component.key]" id="{{ component.key }}" theme="bootstrap"><ui-select-match placeholder="{{ component.placeholder }}"><formio-select-item template="component.template" item="$item || $select.selected" select="$select"></formio-select-item></ui-select-match><ui-select-choices repeat="getSelectItem(item) as item in selectItems | filter: $select.search"><formio-select-item template="component.template" item="item" select="$select"></formio-select-item></ui-select-choices></ui-select>'),e.put("formio/components/select-multiple.html",e.get("formio/components/select.html").replace("<ui-select","<ui-select multiple"))}]),e.config(["formioComponentsProvider",function(e){e.register("textarea",{title:"Text Area",template:"formio/components/textarea.html",settings:{input:!0,label:"",key:"",placeholder:"",prefix:"",suffix:"",rows:3,multiple:!1,defaultValue:"",validate:{required:!1,minLength:"",maxLength:"",pattern:"",custom:""}}})}]),e.run(["$templateCache","FormioUtils",function(e,o){e.put("formio/components/textarea.html",o.fieldWrap('<textarea class="form-control" ng-model="data[component.key]" id="{{ component.key }}" placeholder="{{ component.placeholder }}" rows="{{ component.rows }}"></textarea>'))}]),e.config(["formioComponentsProvider",function(e){e.register("well",{title:"Well",template:"formio/components/well.html",group:"layout",settings:{input:!1,components:[]}})}]),e.run(["$templateCache",function(e){e.put("formio/components/well.html",'<div class="well"><formio-component ng-repeat="component in component.components" component="component" data="data" formio="formio"></formio-component></div>')}])}();